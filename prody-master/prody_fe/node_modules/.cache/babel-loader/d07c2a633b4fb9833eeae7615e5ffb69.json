{"ast":null,"code":"import _slicedToArray from\"/Users/shahafdan/Documents/BostonU/TAMID/prody/prody-master/prody_fe/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useContext,useEffect,useState}from'react';import{ConsoleContext}from'../ConsoleContext';import'./SearchBar.css';import{useFetch}from\"../../utils/Hook\";import Dropdown from\"../../componenets/Dropdown\";import{useHistory}from\"react-router-dom\";import authHeader from\"../../utils/auth-header\";import{CONSTANTS}from'../../utils/constants';var SearchBar=function SearchBar(){// const { marketContext, productContext, setProductContext} = useContext(ConsoleContext);\nvar _useState=useState('a'),_useState2=_slicedToArray(_useState,2),brandFilter=_useState2[0],setBrandFilter=_useState2[1];var _useFetch=useFetch({url:\"\".concat(CONSTANTS.URL_PREFIX,\"://prody.me/api/brand_page_brand_dropdown/\").concat(brandFilter),header:authHeader(),method:'GET',dep1:brandFilter}),data=_useFetch.data,loading=_useFetch.loading;var brandArray=function brandArray(){if(!loading){return data.map(function(item){return{value:item.id,displayValue:item.desc_eng};});}else{return'';}};// console.log(`searchBar: productContext: ${productContext} market: ${marketContext} productFilter: ${productFilter}`);\n// console.log('searchBar - product  ' + product);\nvar history=useHistory();var updateURL=function updateURL(brand){history.push(\"/brandpage/\".concat(brand));};return React.createElement(\"div\",{className:\"searchBarContainer\"},React.createElement(\"div\",{className:\"searchBar_dropdown\"}),React.createElement(\"div\",{className:\"searchBar_dropdown\"},React.createElement(Dropdown,{listArray:brandArray(),title:\"Brand\",loading:loading// selectionValueHandler={setProductContext}\n,useDisplayValue:true,filterHandler:setBrandFilter// defultValue={productContext}\n,updateURL:updateURL})));};export default SearchBar;","map":{"version":3,"sources":["/Users/shahafdan/Documents/BostonU/TAMID/prody/prody-master/prody_fe/src/Console/BrandPage/SearchBar.js"],"names":["React","useContext","useEffect","useState","ConsoleContext","useFetch","Dropdown","useHistory","authHeader","CONSTANTS","SearchBar","brandFilter","setBrandFilter","url","URL_PREFIX","header","method","dep1","data","loading","brandArray","map","item","value","id","displayValue","desc_eng","history","updateURL","brand","push"],"mappings":"uJAAA,MAAOA,CAAAA,KAAP,EAAeC,UAAf,CAA2BC,SAA3B,CAAsCC,QAAtC,KAAqD,OAArD,CAEA,OAASC,cAAT,KAA+B,mBAA/B,CACA,MAAO,iBAAP,CACA,OAAQC,QAAR,KAAuB,kBAAvB,CACA,MAAOC,CAAAA,QAAP,KAAqB,4BAArB,CACA,OAASC,UAAT,KAA2B,kBAA3B,CACA,MAAOC,CAAAA,UAAP,KAAuB,yBAAvB,CACA,OAAQC,SAAR,KAAwB,uBAAxB,CAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CAEpB;AAFoB,cAGkBP,QAAQ,CAAC,GAAD,CAH1B,wCAGbQ,WAHa,eAGAC,cAHA,6BAIMP,QAAQ,CAAC,CAACQ,GAAG,WAAKJ,SAAS,CAACK,UAAf,sDAAsEH,WAAtE,CAAJ,CAC/BI,MAAM,CAAEP,UAAU,EADa,CAE/BQ,MAAM,CAAE,KAFuB,CAG/BC,IAAI,CAAEN,WAHyB,CAAD,CAJd,CAIZO,IAJY,WAIZA,IAJY,CAINC,OAJM,WAINA,OAJM,CASpB,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CACrB,GAAI,CAACD,OAAL,CAAc,CACV,MAAOD,CAAAA,IAAI,CAACG,GAAL,CAAS,SAACC,IAAD,CAAU,CACtB,MAAO,CAACC,KAAK,CAAED,IAAI,CAACE,EAAb,CAAiBC,YAAY,CAAEH,IAAI,CAACI,QAApC,CAAP,CACH,CAFM,CAAP,CAGH,CAJD,IAIO,CAAC,MAAO,EAAP,CAAU,CACrB,CAND,CAQA;AACA;AAEA,GAAMC,CAAAA,OAAO,CAAGpB,UAAU,EAA1B,CAEA,GAAMqB,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,KAAD,CAAW,CACzBF,OAAO,CAACG,IAAR,sBAA2BD,KAA3B,GACH,CAFD,CAIA,MACI,4BAAK,SAAS,CAAC,oBAAf,EACI,2BAAK,SAAS,CAAC,oBAAf,EADJ,CAGI,2BAAK,SAAS,CAAC,oBAAf,EACI,oBAAC,QAAD,EACI,SAAS,CAAET,UAAU,EADzB,CAEI,KAAK,CAAC,OAFV,CAGI,OAAO,CAAED,OACT;AAJJ,CAKI,eAAe,CAAE,IALrB,CAMI,aAAa,CAAEP,cACf;AAPJ,CAQI,SAAS,CAAEgB,SARf,EADJ,CAHJ,CADJ,CAiBH,CA3CD,CA6CA,cAAelB,CAAAA,SAAf","sourcesContent":["import React, {useContext, useEffect, useState} from 'react';\n\nimport { ConsoleContext } from '../ConsoleContext';\nimport './SearchBar.css'\nimport {useFetch} from \"../../utils/Hook\";\nimport Dropdown from \"../../componenets/Dropdown\";\nimport { useHistory } from \"react-router-dom\";\nimport authHeader from \"../../utils/auth-header\";\nimport {CONSTANTS} from '../../utils/constants';\n\nconst SearchBar = () => {\n\n    // const { marketContext, productContext, setProductContext} = useContext(ConsoleContext);\n    const [brandFilter, setBrandFilter] = useState('a');\n    const { data, loading } = useFetch({url: `${CONSTANTS.URL_PREFIX}://prody.me/api/brand_page_brand_dropdown/${brandFilter}`,\n        header: authHeader(),\n        method: 'GET',\n        dep1: brandFilter});\n\n    const brandArray = () => {\n        if (!loading) {\n            return data.map((item) => {\n                return {value: item.id, displayValue: item.desc_eng}\n            });\n        } else {return ''}\n    };\n\n    // console.log(`searchBar: productContext: ${productContext} market: ${marketContext} productFilter: ${productFilter}`);\n    // console.log('searchBar - product  ' + product);\n\n    const history = useHistory();\n\n    const updateURL = (brand) => {\n        history.push(`/brandpage/${brand}`);\n    };\n\n    return (\n        <div className=\"searchBarContainer\">\n            <div className=\"searchBar_dropdown\">\n            </div>\n            <div className=\"searchBar_dropdown\">\n                <Dropdown\n                    listArray={brandArray()}\n                    title='Brand'\n                    loading={loading}\n                    // selectionValueHandler={setProductContext}\n                    useDisplayValue={true}\n                    filterHandler={setBrandFilter}\n                    // defultValue={productContext}\n                    updateURL={updateURL}/>\n            </div>\n        </div>\n    );\n};\n\nexport default SearchBar;"]},"metadata":{},"sourceType":"module"}