{"ast":null,"code":"import _slicedToArray from \"/Users/ashyasingh/prodynew/prody/prody-master/prody_fe/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/ashyasingh/prodynew/prody/prody-master/prody_fe/src/Login/Login.js\";\nimport React, { useContext, useState } from 'react';\nimport './Login.css';\nimport axios from \"axios\";\nimport { AppContext } from \"../AppContext\";\nimport { CONSTANTS } from '../utils/constants';\n\nconst Login = props => {\n  // const { setCompany } = useContext(LoginContext);\n  const _useContext = useContext(AppContext),\n        setIsLoggedIn = _useContext.setIsLoggedIn;\n\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        username = _useState2[0],\n        setUsername = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        password = _useState4[0],\n        setPassword = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        missingData = _useState6[0],\n        setMissingData = _useState6[1];\n\n  const _useState7 = useState(false),\n        _useState8 = _slicedToArray(_useState7, 2),\n        loginFailed = _useState8[0],\n        setLoginFailed = _useState8[1];\n\n  const changeNameHandler = event => {\n    setUsername(event.target.value);\n    setMissingData(false);\n    setLoginFailed(false);\n  };\n\n  const changePwdHandler = event => {\n    setPassword(event.target.value);\n    setMissingData(false);\n    setLoginFailed(false);\n  };\n\n  const loginHandler = () => {\n    // setCompany(username);\n    // localStorage.setItem('company', username);\n    // props.history.push('/console');\n    if (username === '' || password === '') {\n      return setMissingData(true);\n    } else {\n      const authData = {\n        username: username,\n        password: password\n      };\n      axios.post(`${CONSTANTS.URL_PREFIX}://prody.me/api/console_login`, authData).then(res => {\n        if (res.data.accessToken) {\n          localStorage.setItem(\"user\", JSON.stringify(res.data)); // console.log(`login - redirect`);\n\n          setIsLoggedIn(true);\n          props.history.push('/');\n        }\n\n        return res.data;\n      }).catch(err => {\n        setLoginFailed(true);\n        console.log(err);\n      });\n    }\n  }; // console.log(`login rendered`);\n\n\n  return React.createElement(\"div\", {\n    className: \"LoginContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"login-logo\",\n    src: window.location.origin + '/logo.png',\n    alt: \"Prody\",\n    height: \"42\",\n    width: \"116\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"LoginSubContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Login\"), React.createElement(\"input\", {\n    className: \"login-input\",\n    type: \"text\",\n    placeholder: \"Username\",\n    name: \"name\",\n    onChange: changeNameHandler,\n    value: username,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    className: \"login-input\",\n    type: \"password\",\n    placeholder: \"Password\",\n    name: \"psw\",\n    onChange: changePwdHandler,\n    value: password,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"login-button\",\n    onClick: loginHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"Login\"), loginFailed && React.createElement(\"div\", {\n    className: \"loginFailed\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"Login failed\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), \"Username or password are incorrect\"), missingData && React.createElement(\"div\", {\n    className: \"loginMissingData\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"missing username or password\")));\n};\n\nexport default Login;","map":{"version":3,"sources":["/Users/ashyasingh/prodynew/prody/prody-master/prody_fe/src/Login/Login.js"],"names":["React","useContext","useState","axios","AppContext","CONSTANTS","Login","props","setIsLoggedIn","username","setUsername","password","setPassword","missingData","setMissingData","loginFailed","setLoginFailed","changeNameHandler","event","target","value","changePwdHandler","loginHandler","authData","post","URL_PREFIX","then","res","data","accessToken","localStorage","setItem","JSON","stringify","history","push","catch","err","console","log","window","location","origin"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\n\nimport './Login.css';\nimport axios from \"axios\";\nimport {AppContext} from \"../AppContext\";\nimport {CONSTANTS} from '../utils/constants';\n\n\nconst Login = ( props ) => {\n\n    // const { setCompany } = useContext(LoginContext);\n    const { setIsLoggedIn } = useContext(AppContext);\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [missingData, setMissingData] = useState(false);\n    const [loginFailed, setLoginFailed] = useState(false);\n\n    const changeNameHandler = (event) => {\n        setUsername(event.target.value);\n        setMissingData(false);\n        setLoginFailed(false);\n    };\n\n    const changePwdHandler = (event) => {\n        setPassword(event.target.value);\n        setMissingData(false);\n        setLoginFailed(false);\n    };\n\n    const loginHandler = () => {\n        // setCompany(username);\n        // localStorage.setItem('company', username);\n        // props.history.push('/console');\n\n        if(username === '' || password === '') {\n            return setMissingData(true);\n        } else {\n            const authData = {username: username, password: password};\n\n            axios.post(`${CONSTANTS.URL_PREFIX}://prody.me/api/console_login`, authData)\n                .then((res) => {\n                    if (res.data.accessToken) {\n                        localStorage.setItem(\"user\", JSON.stringify(res.data));\n                        // console.log(`login - redirect`);\n                        setIsLoggedIn(true);\n                        props.history.push('/')\n                    }\n\n                    return res.data;\n                })\n                .catch((err) => {\n                    setLoginFailed(true);\n                    console.log(err)})\n        }\n    };\n\n    // console.log(`login rendered`);\n\n    return (\n        <div className=\"LoginContainer\">\n            <img className=\"login-logo\" src={window.location.origin + '/logo.png'} alt={\"Prody\"} height={\"42\"} width={\"116\"}/>\n                <div className=\"LoginSubContainer\">\n                    <h2>Login</h2>\n                    <input className=\"login-input\"\n                           type=\"text\"\n                           placeholder=\"Username\"\n                           name=\"name\"\n                           onChange={changeNameHandler}\n                           value={username}\n                           required/>\n                    <input className=\"login-input\"\n                           type=\"password\"\n                           placeholder=\"Password\"\n                           name=\"psw\"\n                           onChange={changePwdHandler}\n                           value={password} required/>\n                    <button className=\"login-button\"\n                            onClick={loginHandler}>\n                        Login</button>\n                    {loginFailed && <div className=\"loginFailed\">Login failed<br/>Username or password are incorrect</div>}\n                    {missingData && <div className='loginMissingData'>missing username or password</div>}\n                </div>\n        </div>\n    );\n};\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}