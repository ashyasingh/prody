{"ast":null,"code":"import _slicedToArray from\"/Users/shahafdan/Documents/BostonU/TAMID/prody/prody-master/prody_fe/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useContext,useState}from'react';import{ConsoleContext}from'../ConsoleContext';import'./SearchBar.css';import{useFetch}from\"../../utils/Hook\";import Dropdown from\"../../componenets/Dropdown\";import authHeader from\"../../utils/auth-header\";import{CONSTANTS}from'../../utils/constants';var SearchBar=function SearchBar(){var _useContext=useContext(ConsoleContext),marketContext=_useContext.marketContext,productContext=_useContext.productContext,setProductContext=_useContext.setProductContext;var _useState=useState('1'),_useState2=_slicedToArray(_useState,2),productFilter=_useState2[0],setProductFilter=_useState2[1];var _useFetch=useFetch({url:\"\".concat(CONSTANTS.URL_PREFIX,\"://prody.me/api/product_page_product_dropdown/\").concat(marketContext,\"/\").concat(productFilter),header:authHeader(),method:'GET',dep1:productFilter}),data=_useFetch.data,loading=_useFetch.loading;var productsArray=function productsArray(){if(!loading){return data.map(function(item){return{value:item.barcode,displayValue:item.barcode_desc_eng};});}else{return'';}};// console.log(`searchBar: product: ${productContext} market: ${marketContext}`);\n// console.log('searchBar - product  ' + product);\nreturn React.createElement(\"div\",{className:\"searchBarContainer\"},React.createElement(\"div\",{className:\"searchBar_dropdown\"}),React.createElement(\"div\",{className:\"searchBar_dropdown\"},React.createElement(Dropdown,{listArray:productsArray(),title:\"Product\",loading:loading,selectionValueHandler:setProductContext,useDisplayValue:false,filterHandler:setProductFilter,defultValue:productContext})));};export default SearchBar;// TODO: productContext updated on every dropdown change","map":{"version":3,"sources":["/Users/shahafdan/Documents/BostonU/TAMID/prody/prody-master/prody_fe/src/Console/Advertorial/SearchBar.js"],"names":["React","useContext","useState","ConsoleContext","useFetch","Dropdown","authHeader","CONSTANTS","SearchBar","marketContext","productContext","setProductContext","productFilter","setProductFilter","url","URL_PREFIX","header","method","dep1","data","loading","productsArray","map","item","value","barcode","displayValue","barcode_desc_eng"],"mappings":"uJAAA,MAAOA,CAAAA,KAAP,EAAeC,UAAf,CAA2BC,QAA3B,KAA0C,OAA1C,CAEA,OAASC,cAAT,KAA+B,mBAA/B,CACA,MAAO,iBAAP,CACA,OAAQC,QAAR,KAAuB,kBAAvB,CACA,MAAOC,CAAAA,QAAP,KAAqB,4BAArB,CACA,MAAOC,CAAAA,UAAP,KAAuB,yBAAvB,CACA,OAAQC,SAAR,KAAwB,uBAAxB,CAGA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,iBAEwCP,UAAU,CAACE,cAAD,CAFlD,CAEZM,aAFY,aAEZA,aAFY,CAEGC,cAFH,aAEGA,cAFH,CAEmBC,iBAFnB,aAEmBA,iBAFnB,eAGsBT,QAAQ,CAAC,GAAD,CAH9B,wCAGbU,aAHa,eAGEC,gBAHF,6BAIMT,QAAQ,CAC9B,CACIU,GAAG,WAAKP,SAAS,CAACQ,UAAf,0DAA0EN,aAA1E,aAA2FG,aAA3F,CADP,CAEII,MAAM,CAAEV,UAAU,EAFtB,CAGIW,MAAM,CAAE,KAHZ,CAIIC,IAAI,CAAEN,aAJV,CAD8B,CAJd,CAIZO,IAJY,WAIZA,IAJY,CAINC,OAJM,WAINA,OAJM,CAapB,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CACxB,GAAI,CAACD,OAAL,CAAc,CACV,MAAOD,CAAAA,IAAI,CAACG,GAAL,CAAS,SAACC,IAAD,CAAU,CACtB,MAAO,CAACC,KAAK,CAAED,IAAI,CAACE,OAAb,CAAsBC,YAAY,CAAEH,IAAI,CAACI,gBAAzC,CAAP,CACH,CAFM,CAAP,CAGH,CAJD,IAIO,CAAC,MAAO,EAAP,CAAU,CACrB,CAND,CAQA;AACA;AAGA,MACI,4BAAK,SAAS,CAAC,oBAAf,EACI,2BAAK,SAAS,CAAC,oBAAf,EADJ,CAGI,2BAAK,SAAS,CAAC,oBAAf,EACI,oBAAC,QAAD,EACI,SAAS,CAAEN,aAAa,EAD5B,CAEI,KAAK,CAAC,SAFV,CAGI,OAAO,CAAED,OAHb,CAII,qBAAqB,CAAET,iBAJ3B,CAKI,eAAe,CAAE,KALrB,CAMI,aAAa,CAAEE,gBANnB,CAOI,WAAW,CAAEH,cAPjB,EADJ,CAHJ,CADJ,CAgBH,CAzCD,CA2CA,cAAeF,CAAAA,SAAf,CAEA","sourcesContent":["import React, {useContext, useState} from 'react';\n\nimport { ConsoleContext } from '../ConsoleContext';\nimport './SearchBar.css'\nimport {useFetch} from \"../../utils/Hook\";\nimport Dropdown from \"../../componenets/Dropdown\";\nimport authHeader from \"../../utils/auth-header\";\nimport {CONSTANTS} from '../../utils/constants';\n\n\nconst SearchBar = () => {\n\n    const { marketContext, productContext, setProductContext} = useContext(ConsoleContext);\n    const [productFilter, setProductFilter] = useState('1');\n    const { data, loading } = useFetch(\n        {\n            url: `${CONSTANTS.URL_PREFIX}://prody.me/api/product_page_product_dropdown/${marketContext}/${productFilter}`,\n            header: authHeader(),\n            method: 'GET',\n            dep1: productFilter\n        }\n    );\n\n    const productsArray = () => {\n        if (!loading) {\n            return data.map((item) => {\n                return {value: item.barcode, displayValue: item.barcode_desc_eng}\n            });\n        } else {return ''}\n    };\n\n    // console.log(`searchBar: product: ${productContext} market: ${marketContext}`);\n    // console.log('searchBar - product  ' + product);\n\n\n    return (\n        <div className=\"searchBarContainer\">\n            <div className=\"searchBar_dropdown\">\n            </div>\n            <div className=\"searchBar_dropdown\">\n                <Dropdown\n                    listArray={productsArray()}\n                    title='Product'\n                    loading={loading}\n                    selectionValueHandler={setProductContext}\n                    useDisplayValue={false}\n                    filterHandler={setProductFilter}\n                    defultValue={productContext}/>\n            </div>\n        </div>\n    );\n};\n\nexport default SearchBar;\n\n// TODO: productContext updated on every dropdown change"]},"metadata":{},"sourceType":"module"}