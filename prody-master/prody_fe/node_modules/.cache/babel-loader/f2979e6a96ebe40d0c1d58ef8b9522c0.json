{"ast":null,"code":"import _slicedToArray from \"/Users/ashyasingh/prodynew/prody/prody-master/prody_fe/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/ashyasingh/prodynew/prody/prody-master/prody_fe/src/componenets/Dropdown.js\";\nimport React, { useState, useRef, useEffect } from 'react';\nimport './Dropdown.css';\nimport { ReactComponent as ArrowIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../assets/arrow.svg\";\nimport { useHistory } from \"react-router\";\n\nconst Dropdown = props => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        open = _useState2[0],\n        setOpen = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        item = _useState4[0],\n        setItem = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        itemDisplay = _useState6[0],\n        setItemDisplay = _useState6[1];\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        filter = _useState8[0],\n        setFilter = _useState8[1]; // console.log(`Dropdown ${props}`);\n\n\n  const wrapperRef = useRef(null);\n  useEffect(() => {\n    setItemDisplay(props.defultValue);\n  }, [props.defultValue]);\n\n  const dropdown = () => {\n    if (open) {\n      return React.createElement(\"div\", {\n        className: \"dropdown_list\",\n        ref: wrapperRef,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"dropdown_filter\",\n        placeholder: \"Filter\",\n        onChange: changeFilterHandler,\n        value: filter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }), open && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, list()));\n    }\n  };\n\n  const list = () => {\n    if (props.loading) {\n      return React.createElement(\"div\", {\n        className: \"dropdown_item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"Loading...\");\n    } else if (!props.loading && !props.listArray.length) {\n      return React.createElement(\"div\", {\n        className: \"dropdown_item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"No results\");\n    } else {\n      return props.listArray.map((item, index) => {\n        return React.createElement(\"div\", {\n          className: \"dropdown_item\",\n          key: index,\n          onClick: () => clickItemHandler(item.value, item.displayValue),\n          tabIndex: \"0\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, item.displayValue);\n      });\n    }\n  };\n  /*\n  useEffect(() => {\n      document.addEventListener('mousedown', handleClickOutside);\n      return () => {document.removeEventListener('mousedown', handleClickOutside)}\n  },[]);\n   const handleClickOutside = (event) => {\n      const {current: wrap} = wrapperRef;\n      if (wrap && !wrap.contains(event.target)) {\n          setOpen(false)\n      }\n  };\n    */\n\n\n  const clickItemHandler = (itemValue, itemDisplayValue) => {\n    setItem(itemValue);\n    props.selectionValueHandler(itemValue);\n\n    if (props.useDisplayValue) {\n      props.selectionDisplayValueHandler(itemDisplayValue);\n    }\n\n    if (props.updateURL) {\n      props.updateURL(itemValue);\n    }\n\n    setOpen(false);\n  };\n\n  const changeFilterHandler = event => {\n    setFilter(event.target.value);\n    props.filterHandler(event.target.value);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"dropdown_container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"dropdown_title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, props.title), React.createElement(\"div\", {\n    className: \"dropdown_header\",\n    onClick: () => setOpen(!open),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, itemDisplay), React.createElement(\"div\", {\n    className: open ? 'dorpdown_header_icon_open' : '',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(ArrowIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }))), dropdown());\n};\n\nexport default Dropdown; // TODO: close on click outside","map":{"version":3,"sources":["/Users/ashyasingh/prodynew/prody/prody-master/prody_fe/src/componenets/Dropdown.js"],"names":["React","useState","useRef","useEffect","useHistory","Dropdown","props","open","setOpen","item","setItem","itemDisplay","setItemDisplay","filter","setFilter","wrapperRef","defultValue","dropdown","changeFilterHandler","list","loading","listArray","length","map","index","clickItemHandler","value","displayValue","itemValue","itemDisplayValue","selectionValueHandler","useDisplayValue","selectionDisplayValueHandler","updateURL","event","target","filterHandler","title"],"mappings":"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","sourcesContent":["import React, {useState, useRef, useEffect} from 'react';\n\nimport './Dropdown.css'\nimport { ReactComponent as ArrowIcon } from '../assets/arrow.svg';\nimport {useHistory} from \"react-router\";\n\nconst Dropdown = (props) => {\n\n    const [open, setOpen] = useState(false);\n    const [item, setItem] = useState('');\n    const [itemDisplay, setItemDisplay] = useState('');\n    const [filter, setFilter] = useState('');\n\n    // console.log(`Dropdown ${props}`);\n\n    const wrapperRef = useRef(null);\n\n    useEffect(()=>{\n        setItemDisplay(props.defultValue);\n    },[props.defultValue]);\n\n    const dropdown = () => {\n        if (open) {\n            return (\n                <div className='dropdown_list' ref={wrapperRef}>\n                <input\n                    className='dropdown_filter'\n                    placeholder='Filter'\n                    onChange={changeFilterHandler}\n                    value={filter}/>\n                {open && <div>{list()}</div>}\n            </div>\n            )\n        }\n    };\n\n    const list = () => {\n        if (props.loading) {return <div className='dropdown_item'>Loading...</div>}\n        else if (!props.loading && !props.listArray.length) {return (<div className='dropdown_item'>No results</div>)}\n        else {\n            return props.listArray.map((item, index) => {\n                return <div className='dropdown_item'\n                            key={index}\n                            onClick={() => clickItemHandler(item.value, item.displayValue)}\n                            tabIndex='0'>\n                    {item.displayValue}</div>\n            })\n        }\n    };\n\n    /*\n    useEffect(() => {\n        document.addEventListener('mousedown', handleClickOutside);\n        return () => {document.removeEventListener('mousedown', handleClickOutside)}\n    },[]);\n\n    const handleClickOutside = (event) => {\n        const {current: wrap} = wrapperRef;\n        if (wrap && !wrap.contains(event.target)) {\n            setOpen(false)\n        }\n    };\n\n     */\n\n\n    const clickItemHandler = (itemValue, itemDisplayValue) => {\n        setItem(itemValue);\n        props.selectionValueHandler(itemValue);\n        if (props.useDisplayValue) {props.selectionDisplayValueHandler(itemDisplayValue);}\n        if (props.updateURL) {props.updateURL(itemValue)}\n        setOpen(false);\n    };\n\n    const changeFilterHandler = (event) => {\n        setFilter(event.target.value);\n        props.filterHandler(event.target.value);\n    };\n\n\n    return (\n        <div className=\"dropdown_container\">\n            <div className='dropdown_title'>{props.title}</div>\n            <div\n                className=\"dropdown_header\"\n                onClick={() => setOpen(!open)}>\n                <div>{itemDisplay}</div>\n                <div className={open ? 'dorpdown_header_icon_open' : ''}><ArrowIcon/></div>\n            </div>\n            {dropdown()}\n        </div>\n    )\n};\n\nexport default Dropdown;\n\n// TODO: close on click outside"]},"metadata":{},"sourceType":"module"}