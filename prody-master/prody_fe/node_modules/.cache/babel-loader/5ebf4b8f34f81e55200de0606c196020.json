{"ast":null,"code":"import React,{useContext}from'react';import _ from'lodash';import'./Nutrition.css';import{ConsoleContext}from\"../ConsoleContext\";import{useFetch}from'../../utils/Hook';import Table from\"../../componenets/Table\";import NoData from\"../../componenets/NoData\";import Ingredient from\"./Ingredient\";import Loader from\"../../componenets/Loader\";import authHeader from\"../../utils/auth-header\";import{CONSTANTS}from'../../utils/constants';var Nutrition=function Nutrition(){var _useContext=useContext(ConsoleContext),productContext=_useContext.productContext,languageContext=_useContext.languageContext;var _useFetch=useFetch({url:\"\".concat(CONSTANTS.URL_PREFIX,\"://prody.me/api/product_page_nutrition/\").concat(productContext),header:authHeader(),method:'GET',dep1:productContext}),data=_useFetch.data,loading=_useFetch.loading;var title=function title(){if(languageContext==='ENG'){return React.createElement(\"div\",{style:{'fontWeight':'bold'}},\"Nutrition\");}else if(languageContext==='HEB'){return React.createElement(\"div\",{style:{'fontWeight':'bold'}},\"\\u05E2\\u05E8\\u05DB\\u05D9\\u05DD \\u05EA\\u05D6\\u05D5\\u05E0\\u05EA\\u05D9\\u05D9\\u05DD\");}};var rows=function rows(){if(!loading){if(languageContext==='ENG'){var sortedData=_.sortBy(data,function(data){return parseInt(data.order,10);});return sortedData.map(function(row,index){return React.createElement(\"tr\",{className:\"table_row\",key:index},React.createElement(\"td\",null,row.desc_eng),React.createElement(\"td\",null,row.uom_eng),React.createElement(\"td\",{className:\"numeric_value\"},row.hundred_gram_value),React.createElement(\"td\",{className:\"numeric_value\"},row.per_unit_value));});}else if(languageContext==='HEB'){var _sortedData=_.sortBy(data,function(data){return parseInt(data.order,10);});return _sortedData.map(function(row,index){return React.createElement(\"tr\",{className:\"table_row\",key:index},React.createElement(\"td\",{dir:\"rtl\"},row.desc_heb),React.createElement(\"td\",{dir:\"rtl\"},row.uom_heb),React.createElement(\"td\",{className:\"numeric_value\"},row.hundred_gram_value),React.createElement(\"td\",{className:\"numeric_value\"},row.per_unit_value));});}}};var tableHead=function tableHead(){if(languageContext==='ENG'){return React.createElement(\"thead\",null,React.createElement(\"tr\",null,React.createElement(\"th\",null,\"Label\"),React.createElement(\"th\",null,\"Unit Of Measure\"),React.createElement(\"th\",null,\"Per 100 Gram\"),React.createElement(\"th\",null,\"Per Unit\")));}else if(languageContext==='HEB'){return React.createElement(\"thead\",null,React.createElement(\"tr\",null,React.createElement(\"th\",null,\"\\u05E9\\u05DD\"),React.createElement(\"th\",null,\"\\u05D9\\u05D7\\u05D9\\u05D3\\u05EA \\u05DE\\u05D9\\u05D3\\u05D4\"),React.createElement(\"th\",null,\"\\u05DC-100 \\u05D2\\u05E8\\u05DD\"),React.createElement(\"th\",null,\"\\u05DC\\u05D9\\u05D7\\u05D9\\u05D3\\u05D4\")));}};var content=function content(){if(loading){return React.createElement(Loader,null);}else if(!data.length){return React.createElement(NoData,null);}else{return React.createElement(React.Fragment,null,React.createElement(Table,null,React.createElement(\"table\",null,tableHead(),React.createElement(\"tbody\",null,rows()))));}};return React.createElement(\"div\",{className:\"nutritionContainer\"},React.createElement(\"div\",{className:\"nutritionTable\"},title(),React.createElement(\"div\",{className:\"nutritionContent\"},\" \",content())),React.createElement(\"div\",{className:\"nutritionIngredients\"},React.createElement(Ingredient,null)));};export default Nutrition;// TODO: add market to endpoint","map":{"version":3,"sources":["/Users/shahafdan/Documents/BostonU/TAMID/prody/prody-master/prody_fe/src/Console/ProductPage/Nutrition.js"],"names":["React","useContext","_","ConsoleContext","useFetch","Table","NoData","Ingredient","Loader","authHeader","CONSTANTS","Nutrition","productContext","languageContext","url","URL_PREFIX","header","method","dep1","data","loading","title","rows","sortedData","sortBy","parseInt","order","map","row","index","desc_eng","uom_eng","hundred_gram_value","per_unit_value","desc_heb","uom_heb","tableHead","content","length"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAeC,UAAf,KAAgC,OAAhC,CACA,MAAOC,CAAAA,CAAP,KAAc,QAAd,CAEA,MAAO,iBAAP,CACA,OAAQC,cAAR,KAA6B,mBAA7B,CACA,OAASC,QAAT,KAAyB,kBAAzB,CACA,MAAOC,CAAAA,KAAP,KAAkB,yBAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CACA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,CACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CACA,MAAOC,CAAAA,UAAP,KAAuB,yBAAvB,CACA,OAAQC,SAAR,KAAwB,uBAAxB,CAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,iBAEwBV,UAAU,CAACE,cAAD,CAFlC,CAEZS,cAFY,aAEZA,cAFY,CAEIC,eAFJ,aAEIA,eAFJ,eAIKT,QAAQ,CAAC,CAACU,GAAG,WAAIJ,SAAS,CAACK,UAAd,mDAAkEH,cAAlE,CAAJ,CAC9BI,MAAM,CAAEP,UAAU,EADY,CAE9BQ,MAAM,CAAE,KAFsB,CAG9BC,IAAI,CAAEN,cAHwB,CAAD,CAJb,CAIZO,IAJY,WAIZA,IAJY,CAINC,OAJM,WAINA,OAJM,CASpB,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,EAAM,CAChB,GAAGR,eAAe,GAAK,KAAvB,CAA8B,CAAC,MAAQ,4BAAK,KAAK,CAAE,CAAC,aAAc,MAAf,CAAZ,cAAR,CAA6D,CAA5F,IACK,IAAIA,eAAe,GAAK,KAAxB,CAA+B,CAAC,MAAQ,4BAAK,KAAK,CAAE,CAAC,aAAc,MAAf,CAAZ,oFAAR,CAAkE,CAC1G,CAHD,CAKA,GAAMS,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,EAAM,CACf,GAAG,CAACF,OAAJ,CAAa,CACT,GAAGP,eAAe,GAAK,KAAvB,CAA8B,CAC1B,GAAMU,CAAAA,UAAU,CAAGrB,CAAC,CAACsB,MAAF,CAASL,IAAT,CAAe,SAACA,IAAD,QAAUM,CAAAA,QAAQ,CAACN,IAAI,CAACO,KAAN,CAAa,EAAb,CAAlB,EAAf,CAAnB,CACA,MAAOH,CAAAA,UAAU,CAACI,GAAX,CAAe,SAACC,GAAD,CAAMC,KAAN,CAAgB,CAClC,MACI,2BAAI,SAAS,CAAC,WAAd,CAA0B,GAAG,CAAEA,KAA/B,EACI,8BAAKD,GAAG,CAACE,QAAT,CADJ,CAEI,8BAAKF,GAAG,CAACG,OAAT,CAFJ,CAGI,0BAAI,SAAS,CAAC,eAAd,EAA+BH,GAAG,CAACI,kBAAnC,CAHJ,CAII,0BAAI,SAAS,CAAC,eAAd,EAA+BJ,GAAG,CAACK,cAAnC,CAJJ,CADJ,CAQH,CATM,CAAP,CAUH,CAZD,IAaK,IAAIpB,eAAe,GAAK,KAAxB,CAA+B,CAChC,GAAMU,CAAAA,WAAU,CAAGrB,CAAC,CAACsB,MAAF,CAASL,IAAT,CAAe,SAACA,IAAD,QAAUM,CAAAA,QAAQ,CAACN,IAAI,CAACO,KAAN,CAAa,EAAb,CAAlB,EAAf,CAAnB,CACA,MAAOH,CAAAA,WAAU,CAACI,GAAX,CAAe,SAACC,GAAD,CAAMC,KAAN,CAAgB,CAClC,MACI,2BAAI,SAAS,CAAC,WAAd,CAA0B,GAAG,CAAEA,KAA/B,EACI,0BAAI,GAAG,CAAC,KAAR,EAAeD,GAAG,CAACM,QAAnB,CADJ,CAEI,0BAAI,GAAG,CAAC,KAAR,EAAeN,GAAG,CAACO,OAAnB,CAFJ,CAGI,0BAAI,SAAS,CAAC,eAAd,EAA+BP,GAAG,CAACI,kBAAnC,CAHJ,CAII,0BAAI,SAAS,CAAC,eAAd,EAA+BJ,GAAG,CAACK,cAAnC,CAJJ,CADJ,CAQH,CATM,CAAP,CAUH,CACJ,CACJ,CA7BD,CA+BA,GAAMG,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CACpB,GAAIvB,eAAe,GAAK,KAAxB,CAA+B,CAC3B,MACI,kCACA,8BACI,sCADJ,CAEI,gDAFJ,CAGI,6CAHJ,CAII,yCAJJ,CADA,CADJ,CAUH,CAXD,IAYK,IAAIA,eAAe,GAAK,KAAxB,CAA+B,CAChC,MACI,kCACA,8BACI,6CADJ,CAEI,wFAFJ,CAGI,8DAHJ,CAII,qEAJJ,CADA,CADJ,CAUH,CACJ,CAzBD,CA2BA,GAAMwB,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAM,CAClB,GAAGjB,OAAH,CAAY,CAAC,MAAQ,qBAAC,MAAD,MAAR,CAAmB,CAAhC,IACK,IAAI,CAACD,IAAI,CAACmB,MAAV,CAAkB,CAAC,MAAQ,qBAAC,MAAD,MAAR,CAAmB,CAAtC,IACA,CACD,MACI,yCACI,oBAAC,KAAD,MACI,iCACKF,SAAS,EADd,CAEI,iCACCd,IAAI,EADL,CAFJ,CADJ,CADJ,CADJ,CAYH,CACJ,CAjBD,CAoBA,MACI,4BAAK,SAAS,CAAC,oBAAf,EACI,2BAAK,SAAS,CAAC,gBAAf,EACKD,KAAK,EADV,CAEI,2BAAK,SAAS,CAAC,kBAAf,MAAoCgB,OAAO,EAA3C,CAFJ,CADJ,CAKI,2BAAK,SAAS,CAAC,sBAAf,EACA,oBAAC,UAAD,MADA,CALJ,CADJ,CAWH,CAvGD,CAyGA,cAAe1B,CAAAA,SAAf,CAEA","sourcesContent":["import React, {useContext} from 'react';\nimport _ from 'lodash';\n\nimport './Nutrition.css'\nimport {ConsoleContext} from \"../ConsoleContext\";\nimport { useFetch } from '../../utils/Hook';\nimport Table from \"../../componenets/Table\";\nimport NoData from \"../../componenets/NoData\";\nimport Ingredient from \"./Ingredient\";\nimport Loader from \"../../componenets/Loader\";\nimport authHeader from \"../../utils/auth-header\";\nimport {CONSTANTS} from '../../utils/constants';\n\nconst Nutrition = () => {\n\n    const { productContext, languageContext } = useContext(ConsoleContext);\n\n    const { data, loading} = useFetch({url:`${CONSTANTS.URL_PREFIX}://prody.me/api/product_page_nutrition/${productContext}`,\n        header: authHeader(),\n        method: 'GET',\n        dep1: productContext});\n\n    const title = () => {\n        if(languageContext === 'ENG') {return (<div style={{'fontWeight': 'bold'}}>Nutrition</div>)}\n        else if (languageContext === 'HEB') {return (<div style={{'fontWeight': 'bold'}}>ערכים תזונתיים</div>)}\n    };\n\n    const rows = () => {\n        if(!loading) {\n            if(languageContext === 'ENG') {\n                const sortedData = _.sortBy(data, (data) => parseInt(data.order, 10));\n                return sortedData.map((row, index) => {\n                    return (\n                        <tr className=\"table_row\" key={index}>\n                            <td>{row.desc_eng}</td>\n                            <td>{row.uom_eng}</td>\n                            <td className=\"numeric_value\">{row.hundred_gram_value}</td>\n                            <td className=\"numeric_value\">{row.per_unit_value}</td>\n                        </tr>\n                    )\n                })\n            }\n            else if (languageContext === 'HEB') {\n                const sortedData = _.sortBy(data, (data) => parseInt(data.order, 10));\n                return sortedData.map((row, index) => {\n                    return (\n                        <tr className=\"table_row\" key={index}>\n                            <td dir='rtl'>{row.desc_heb}</td>\n                            <td dir='rtl'>{row.uom_heb}</td>\n                            <td className=\"numeric_value\">{row.hundred_gram_value}</td>\n                            <td className=\"numeric_value\">{row.per_unit_value}</td>\n                        </tr>\n                    )\n                })\n            }\n        }\n    };\n\n    const tableHead = () => {\n        if (languageContext === 'ENG') {\n            return (\n                <thead>\n                <tr>\n                    <th>Label</th>\n                    <th>Unit Of Measure</th>\n                    <th>Per 100 Gram</th>\n                    <th>Per Unit</th>\n                </tr>\n                </thead>\n            )\n        }\n        else if (languageContext === 'HEB') {\n            return (\n                <thead>\n                <tr>\n                    <th>שם</th>\n                    <th>יחידת מידה</th>\n                    <th>ל-100 גרם</th>\n                    <th>ליחידה</th>\n                </tr>\n                </thead>\n            )\n        }\n    };\n\n    const content = () => {\n        if(loading) {return (<Loader/>)}\n        else if (!data.length) {return (<NoData/>)}\n        else {\n            return (\n                <>\n                    <Table>\n                        <table>\n                            {tableHead()}\n                            <tbody>\n                            {rows()}\n                            </tbody>\n                        </table>\n                    </Table>\n                </>\n            )\n        }\n    };\n\n\n    return (\n        <div className='nutritionContainer'>\n            <div className='nutritionTable'>\n                {title()}\n                <div className='nutritionContent'> {content()}</div>\n            </div>\n            <div className='nutritionIngredients'>\n            <Ingredient/>\n        </div>\n        </div>\n    )\n};\n\nexport default Nutrition;\n\n// TODO: add market to endpoint"]},"metadata":{},"sourceType":"module"}