{"ast":null,"code":"var _jsxFileName = \"/Users/michellezyman/Projects/prody/prody-master/prody_fe/src/Console/ProductPage/Nutrition.js\";\nimport React, { useContext } from 'react';\nimport _ from 'lodash';\nimport './Nutrition.css';\nimport { ConsoleContext } from \"../ConsoleContext\";\nimport { useFetch } from '../../utils/Hook';\nimport Table from \"../../componenets/Table\";\nimport NoData from \"../../componenets/NoData\";\nimport Ingredient from \"./Ingredient\";\nimport Loader from \"../../componenets/Loader\";\nimport authHeader from \"../../utils/auth-header\";\nimport { CONSTANTS } from '../../utils/constants';\n\nconst Nutrition = () => {\n  const _useContext = useContext(ConsoleContext),\n        productContext = _useContext.productContext,\n        languageContext = _useContext.languageContext;\n\n  const _useFetch = useFetch({\n    url: `${CONSTANTS.URL_PREFIX}://prody.me/api/product_page_nutrition/${productContext}`,\n    header: authHeader(),\n    method: 'GET',\n    dep1: productContext\n  }),\n        data = _useFetch.data,\n        loading = _useFetch.loading;\n\n  const title = () => {\n    if (languageContext === 'ENG') {\n      return React.createElement(\"div\", {\n        style: {\n          'fontWeight': 'bold'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"Nutrition\");\n    } else if (languageContext === 'HEB') {\n      return React.createElement(\"div\", {\n        style: {\n          'fontWeight': 'bold'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"\\u05E2\\u05E8\\u05DB\\u05D9\\u05DD \\u05EA\\u05D6\\u05D5\\u05E0\\u05EA\\u05D9\\u05D9\\u05DD\");\n    }\n  };\n\n  const rows = () => {\n    if (!loading) {\n      if (languageContext === 'ENG') {\n        const sortedData = _.sortBy(data, data => parseInt(data.order, 10));\n\n        return sortedData.map((row, index) => {\n          return React.createElement(\"tr\", {\n            className: \"table_row\",\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 34\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 35\n            },\n            __self: this\n          }, row.desc_eng), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 36\n            },\n            __self: this\n          }, row.uom_eng), React.createElement(\"td\", {\n            className: \"numeric_value\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 37\n            },\n            __self: this\n          }, row.hundred_gram_value), React.createElement(\"td\", {\n            className: \"numeric_value\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 38\n            },\n            __self: this\n          }, row.per_unit_value));\n        });\n      } else if (languageContext === 'HEB') {\n        const sortedData = _.sortBy(data, data => parseInt(data.order, 10));\n\n        return sortedData.map((row, index) => {\n          return React.createElement(\"tr\", {\n            className: \"table_row\",\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 47\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            dir: \"rtl\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 48\n            },\n            __self: this\n          }, row.desc_heb), React.createElement(\"td\", {\n            dir: \"rtl\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 49\n            },\n            __self: this\n          }, row.uom_heb), React.createElement(\"td\", {\n            className: \"numeric_value\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 50\n            },\n            __self: this\n          }, row.hundred_gram_value), React.createElement(\"td\", {\n            className: \"numeric_value\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 51\n            },\n            __self: this\n          }, row.per_unit_value));\n        });\n      }\n    }\n  };\n\n  const tableHead = () => {\n    if (languageContext === 'ENG') {\n      return React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"Label\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Unit Of Measure\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"Per 100 Gram\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Per Unit\")));\n    } else if (languageContext === 'HEB') {\n      return React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"\\u05E9\\u05DD\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"\\u05D9\\u05D7\\u05D9\\u05D3\\u05EA \\u05DE\\u05D9\\u05D3\\u05D4\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"\\u05DC-100 \\u05D2\\u05E8\\u05DD\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"\\u05DC\\u05D9\\u05D7\\u05D9\\u05D3\\u05D4\")));\n    }\n  };\n\n  const content = () => {\n    if (loading) {\n      return React.createElement(Loader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      });\n    } else if (!data.length) {\n      return React.createElement(NoData, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(React.Fragment, null, React.createElement(Table, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, tableHead(), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, rows()))));\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"nutritionContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"nutritionTable\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, title(), React.createElement(\"div\", {\n    className: \"nutritionContent\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, \" \", content())), React.createElement(\"div\", {\n    className: \"nutritionIngredients\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(Ingredient, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  })));\n};\n\nexport default Nutrition; // TODO: add market to endpoint","map":{"version":3,"sources":["/Users/michellezyman/Projects/prody/prody-master/prody_fe/src/Console/ProductPage/Nutrition.js"],"names":["React","useContext","_","ConsoleContext","useFetch","Table","NoData","Ingredient","Loader","authHeader","CONSTANTS","Nutrition","productContext","languageContext","url","URL_PREFIX","header","method","dep1","data","loading","title","rows","sortedData","sortBy","parseInt","order","map","row","index","desc_eng","uom_eng","hundred_gram_value","per_unit_value","desc_heb","uom_heb","tableHead","content","length"],"mappings":"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","sourcesContent":["import React, {useContext} from 'react';\nimport _ from 'lodash';\n\nimport './Nutrition.css'\nimport {ConsoleContext} from \"../ConsoleContext\";\nimport { useFetch } from '../../utils/Hook';\nimport Table from \"../../componenets/Table\";\nimport NoData from \"../../componenets/NoData\";\nimport Ingredient from \"./Ingredient\";\nimport Loader from \"../../componenets/Loader\";\nimport authHeader from \"../../utils/auth-header\";\nimport {CONSTANTS} from '../../utils/constants';\n\nconst Nutrition = () => {\n\n    const { productContext, languageContext } = useContext(ConsoleContext);\n\n    const { data, loading} = useFetch({url:`${CONSTANTS.URL_PREFIX}://prody.me/api/product_page_nutrition/${productContext}`,\n        header: authHeader(),\n        method: 'GET',\n        dep1: productContext});\n\n    const title = () => {\n        if(languageContext === 'ENG') {return (<div style={{'fontWeight': 'bold'}}>Nutrition</div>)}\n        else if (languageContext === 'HEB') {return (<div style={{'fontWeight': 'bold'}}>ערכים תזונתיים</div>)}\n    };\n\n    const rows = () => {\n        if(!loading) {\n            if(languageContext === 'ENG') {\n                const sortedData = _.sortBy(data, (data) => parseInt(data.order, 10));\n                return sortedData.map((row, index) => {\n                    return (\n                        <tr className=\"table_row\" key={index}>\n                            <td>{row.desc_eng}</td>\n                            <td>{row.uom_eng}</td>\n                            <td className=\"numeric_value\">{row.hundred_gram_value}</td>\n                            <td className=\"numeric_value\">{row.per_unit_value}</td>\n                        </tr>\n                    )\n                })\n            }\n            else if (languageContext === 'HEB') {\n                const sortedData = _.sortBy(data, (data) => parseInt(data.order, 10));\n                return sortedData.map((row, index) => {\n                    return (\n                        <tr className=\"table_row\" key={index}>\n                            <td dir='rtl'>{row.desc_heb}</td>\n                            <td dir='rtl'>{row.uom_heb}</td>\n                            <td className=\"numeric_value\">{row.hundred_gram_value}</td>\n                            <td className=\"numeric_value\">{row.per_unit_value}</td>\n                        </tr>\n                    )\n                })\n            }\n        }\n    };\n\n    const tableHead = () => {\n        if (languageContext === 'ENG') {\n            return (\n                <thead>\n                <tr>\n                    <th>Label</th>\n                    <th>Unit Of Measure</th>\n                    <th>Per 100 Gram</th>\n                    <th>Per Unit</th>\n                </tr>\n                </thead>\n            )\n        }\n        else if (languageContext === 'HEB') {\n            return (\n                <thead>\n                <tr>\n                    <th>שם</th>\n                    <th>יחידת מידה</th>\n                    <th>ל-100 גרם</th>\n                    <th>ליחידה</th>\n                </tr>\n                </thead>\n            )\n        }\n    };\n\n    const content = () => {\n        if(loading) {return (<Loader/>)}\n        else if (!data.length) {return (<NoData/>)}\n        else {\n            return (\n                <>\n                    <Table>\n                        <table>\n                            {tableHead()}\n                            <tbody>\n                            {rows()}\n                            </tbody>\n                        </table>\n                    </Table>\n                </>\n            )\n        }\n    };\n\n\n    return (\n        <div className='nutritionContainer'>\n            <div className='nutritionTable'>\n                {title()}\n                <div className='nutritionContent'> {content()}</div>\n            </div>\n            <div className='nutritionIngredients'>\n            <Ingredient/>\n        </div>\n        </div>\n    )\n};\n\nexport default Nutrition;\n\n// TODO: add market to endpoint"]},"metadata":{},"sourceType":"module"}