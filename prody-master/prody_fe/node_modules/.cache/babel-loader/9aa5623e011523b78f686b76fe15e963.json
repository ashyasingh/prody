{"ast":null,"code":"import _slicedToArray from\"/Users/shahafdan/Documents/BostonU/TAMID/prody/prody-master/prody_fe/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useRef,useEffect}from'react';import'./Dropdown.css';import{ReactComponent as ArrowIcon}from\"@svgr/webpack?-svgo,+titleProp,+ref!../assets/arrow.svg\";import{useHistory}from\"react-router\";var Dropdown=function Dropdown(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),open=_useState2[0],setOpen=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),item=_useState4[0],setItem=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),itemDisplay=_useState6[0],setItemDisplay=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),filter=_useState8[0],setFilter=_useState8[1];// console.log(`Dropdown ${props}`);\nvar wrapperRef=useRef(null);useEffect(function(){setItemDisplay(props.defultValue);},[props.defultValue]);var dropdown=function dropdown(){if(open){return React.createElement(\"div\",{className:\"dropdown_list\",ref:wrapperRef},React.createElement(\"input\",{className:\"dropdown_filter\",placeholder:\"Filter\",onChange:changeFilterHandler,value:filter}),open&&React.createElement(\"div\",null,list()));}};var list=function list(){if(props.loading){return React.createElement(\"div\",{className:\"dropdown_item\"},\"Loading...\");}else if(!props.loading&&!props.listArray.length){return React.createElement(\"div\",{className:\"dropdown_item\"},\"No results\");}else{return props.listArray.map(function(item,index){return React.createElement(\"div\",{className:\"dropdown_item\",key:index,onClick:function onClick(){return clickItemHandler(item.value,item.displayValue);},tabIndex:\"0\"},item.displayValue);});}};/*\n    useEffect(() => {\n        document.addEventListener('mousedown', handleClickOutside);\n        return () => {document.removeEventListener('mousedown', handleClickOutside)}\n    },[]);\n\n    const handleClickOutside = (event) => {\n        const {current: wrap} = wrapperRef;\n        if (wrap && !wrap.contains(event.target)) {\n            setOpen(false)\n        }\n    };\n\n     */var clickItemHandler=function clickItemHandler(itemValue,itemDisplayValue){setItem(itemValue);props.selectionValueHandler(itemValue);if(props.useDisplayValue){props.selectionDisplayValueHandler(itemDisplayValue);}if(props.updateURL){props.updateURL(itemValue);}setOpen(false);};var changeFilterHandler=function changeFilterHandler(event){setFilter(event.target.value);props.filterHandler(event.target.value);};return React.createElement(\"div\",{className:\"dropdown_container\"},React.createElement(\"div\",{className:\"dropdown_title\"},props.title),React.createElement(\"div\",{className:\"dropdown_header\",onClick:function onClick(){return setOpen(!open);}},React.createElement(\"div\",null,itemDisplay),React.createElement(\"div\",{className:open?'dorpdown_header_icon_open':''},React.createElement(ArrowIcon,null))),dropdown());};export default Dropdown;// TODO: close on click outside","map":{"version":3,"sources":["/Users/shahafdan/Documents/BostonU/TAMID/prody/prody-master/prody_fe/src/componenets/Dropdown.js"],"names":["React","useState","useRef","useEffect","useHistory","Dropdown","props","open","setOpen","item","setItem","itemDisplay","setItemDisplay","filter","setFilter","wrapperRef","defultValue","dropdown","changeFilterHandler","list","loading","listArray","length","map","index","clickItemHandler","value","displayValue","itemValue","itemDisplayValue","selectionValueHandler","useDisplayValue","selectionDisplayValueHandler","updateURL","event","target","filterHandler","title"],"mappings":"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","sourcesContent":["import React, {useState, useRef, useEffect} from 'react';\n\nimport './Dropdown.css'\nimport { ReactComponent as ArrowIcon } from '../assets/arrow.svg';\nimport {useHistory} from \"react-router\";\n\nconst Dropdown = (props) => {\n\n    const [open, setOpen] = useState(false);\n    const [item, setItem] = useState('');\n    const [itemDisplay, setItemDisplay] = useState('');\n    const [filter, setFilter] = useState('');\n\n    // console.log(`Dropdown ${props}`);\n\n    const wrapperRef = useRef(null);\n\n    useEffect(()=>{\n        setItemDisplay(props.defultValue);\n    },[props.defultValue]);\n\n    const dropdown = () => {\n        if (open) {\n            return (\n                <div className='dropdown_list' ref={wrapperRef}>\n                <input\n                    className='dropdown_filter'\n                    placeholder='Filter'\n                    onChange={changeFilterHandler}\n                    value={filter}/>\n                {open && <div>{list()}</div>}\n            </div>\n            )\n        }\n    };\n\n    const list = () => {\n        if (props.loading) {return <div className='dropdown_item'>Loading...</div>}\n        else if (!props.loading && !props.listArray.length) {return (<div className='dropdown_item'>No results</div>)}\n        else {\n            return props.listArray.map((item, index) => {\n                return <div className='dropdown_item'\n                            key={index}\n                            onClick={() => clickItemHandler(item.value, item.displayValue)}\n                            tabIndex='0'>\n                    {item.displayValue}</div>\n            })\n        }\n    };\n\n    /*\n    useEffect(() => {\n        document.addEventListener('mousedown', handleClickOutside);\n        return () => {document.removeEventListener('mousedown', handleClickOutside)}\n    },[]);\n\n    const handleClickOutside = (event) => {\n        const {current: wrap} = wrapperRef;\n        if (wrap && !wrap.contains(event.target)) {\n            setOpen(false)\n        }\n    };\n\n     */\n\n\n    const clickItemHandler = (itemValue, itemDisplayValue) => {\n        setItem(itemValue);\n        props.selectionValueHandler(itemValue);\n        if (props.useDisplayValue) {props.selectionDisplayValueHandler(itemDisplayValue);}\n        if (props.updateURL) {props.updateURL(itemValue)}\n        setOpen(false);\n    };\n\n    const changeFilterHandler = (event) => {\n        setFilter(event.target.value);\n        props.filterHandler(event.target.value);\n    };\n\n\n    return (\n        <div className=\"dropdown_container\">\n            <div className='dropdown_title'>{props.title}</div>\n            <div\n                className=\"dropdown_header\"\n                onClick={() => setOpen(!open)}>\n                <div>{itemDisplay}</div>\n                <div className={open ? 'dorpdown_header_icon_open' : ''}><ArrowIcon/></div>\n            </div>\n            {dropdown()}\n        </div>\n    )\n};\n\nexport default Dropdown;\n\n// TODO: close on click outside"]},"metadata":{},"sourceType":"module"}