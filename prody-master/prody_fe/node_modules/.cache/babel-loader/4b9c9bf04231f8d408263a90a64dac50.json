{"ast":null,"code":"import _slicedToArray from\"/Users/shahafdan/Documents/BostonU/TAMID/prody/prody-master/prody_fe/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useContext,useState}from'react';import'./Login.css';import axios from\"axios\";import{AppContext}from\"../AppContext\";import{CONSTANTS}from'../utils/constants';var Login=function Login(props){// const { setCompany } = useContext(LoginContext);\nvar _useContext=useContext(AppContext),setIsLoggedIn=_useContext.setIsLoggedIn;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),username=_useState2[0],setUsername=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),password=_useState4[0],setPassword=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),missingData=_useState6[0],setMissingData=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),loginFailed=_useState8[0],setLoginFailed=_useState8[1];var changeNameHandler=function changeNameHandler(event){setUsername(event.target.value);setMissingData(false);setLoginFailed(false);};var changePwdHandler=function changePwdHandler(event){setPassword(event.target.value);setMissingData(false);setLoginFailed(false);};var loginHandler=function loginHandler(){// setCompany(username);\n// localStorage.setItem('company', username);\n// props.history.push('/console');\nif(username===''||password===''){return setMissingData(true);}else{var authData={username:username,password:password};axios.post(\"\".concat(CONSTANTS.URL_PREFIX,\"://prody.me/api/console_login\"),authData).then(function(res){if(res.data.accessToken){localStorage.setItem(\"user\",JSON.stringify(res.data));// console.log(`login - redirect`);\nsetIsLoggedIn(true);props.history.push('/');}return res.data;}).catch(function(err){setLoginFailed(true);console.log(err);});}};// console.log(`login rendered`);\nreturn React.createElement(\"div\",{className:\"LoginContainer\"},React.createElement(\"img\",{className:\"login-logo\",src:window.location.origin+'/logo.png',alt:\"Prody\",height:\"42\",width:\"116\"}),React.createElement(\"div\",{className:\"LoginSubContainer\"},React.createElement(\"h2\",null,\"Login\"),React.createElement(\"input\",{className:\"login-input\",type:\"text\",placeholder:\"Username\",name:\"name\",onChange:changeNameHandler,value:username,required:true}),React.createElement(\"input\",{className:\"login-input\",type:\"password\",placeholder:\"Password\",name:\"psw\",onChange:changePwdHandler,value:password,required:true}),React.createElement(\"button\",{className:\"login-button\",onClick:loginHandler},\"Login\"),loginFailed&&React.createElement(\"div\",{className:\"loginFailed\"},\"Login failed\",React.createElement(\"br\",null),\"Username or password are incorrect\"),missingData&&React.createElement(\"div\",{className:\"loginMissingData\"},\"missing username or password\")));};export default Login;","map":{"version":3,"sources":["/Users/shahafdan/Documents/BostonU/TAMID/prody/prody-master/prody_fe/src/Login/Login.js"],"names":["React","useContext","useState","axios","AppContext","CONSTANTS","Login","props","setIsLoggedIn","username","setUsername","password","setPassword","missingData","setMissingData","loginFailed","setLoginFailed","changeNameHandler","event","target","value","changePwdHandler","loginHandler","authData","post","URL_PREFIX","then","res","data","accessToken","localStorage","setItem","JSON","stringify","history","push","catch","err","console","log","window","location","origin"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\n\nimport './Login.css';\nimport axios from \"axios\";\nimport {AppContext} from \"../AppContext\";\nimport {CONSTANTS} from '../utils/constants';\n\n\nconst Login = ( props ) => {\n\n    // const { setCompany } = useContext(LoginContext);\n    const { setIsLoggedIn } = useContext(AppContext);\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [missingData, setMissingData] = useState(false);\n    const [loginFailed, setLoginFailed] = useState(false);\n\n    const changeNameHandler = (event) => {\n        setUsername(event.target.value);\n        setMissingData(false);\n        setLoginFailed(false);\n    };\n\n    const changePwdHandler = (event) => {\n        setPassword(event.target.value);\n        setMissingData(false);\n        setLoginFailed(false);\n    };\n\n    const loginHandler = () => {\n        // setCompany(username);\n        // localStorage.setItem('company', username);\n        // props.history.push('/console');\n\n        if(username === '' || password === '') {\n            return setMissingData(true);\n        } else {\n            const authData = {username: username, password: password};\n\n            axios.post(`${CONSTANTS.URL_PREFIX}://prody.me/api/console_login`, authData)\n                .then((res) => {\n                    if (res.data.accessToken) {\n                        localStorage.setItem(\"user\", JSON.stringify(res.data));\n                        // console.log(`login - redirect`);\n                        setIsLoggedIn(true);\n                        props.history.push('/')\n                    }\n\n                    return res.data;\n                })\n                .catch((err) => {\n                    setLoginFailed(true);\n                    console.log(err)})\n        }\n    };\n\n    // console.log(`login rendered`);\n\n    return (\n        <div className=\"LoginContainer\">\n            <img className=\"login-logo\" src={window.location.origin + '/logo.png'} alt={\"Prody\"} height={\"42\"} width={\"116\"}/>\n                <div className=\"LoginSubContainer\">\n                    <h2>Login</h2>\n                    <input className=\"login-input\"\n                           type=\"text\"\n                           placeholder=\"Username\"\n                           name=\"name\"\n                           onChange={changeNameHandler}\n                           value={username}\n                           required/>\n                    <input className=\"login-input\"\n                           type=\"password\"\n                           placeholder=\"Password\"\n                           name=\"psw\"\n                           onChange={changePwdHandler}\n                           value={password} required/>\n                    <button className=\"login-button\"\n                            onClick={loginHandler}>\n                        Login</button>\n                    {loginFailed && <div className=\"loginFailed\">Login failed<br/>Username or password are incorrect</div>}\n                    {missingData && <div className='loginMissingData'>missing username or password</div>}\n                </div>\n        </div>\n    );\n};\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}