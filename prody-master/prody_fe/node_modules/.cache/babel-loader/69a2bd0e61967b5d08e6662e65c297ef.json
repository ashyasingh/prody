{"ast":null,"code":"var _jsxFileName = \"/Users/michellezyman/Projects/prody/prody-master/prody_fe/src/Console/ProductPage/BrandProducts.js\";\nimport React, { useContext } from 'react'; // import './BrandProducts.css';\n\nimport { ConsoleContext } from \"../ConsoleContext\";\nimport { useFetch } from \"../../utils/Hook\";\nimport NoData from \"../../componenets/NoData\";\nimport Table from \"../../componenets/Table\";\nimport Loader from \"../../componenets/Loader\";\nimport authHeader from \"../../utils/auth-header\";\nimport _ from \"lodash\";\nimport { CONSTANTS } from '../../utils/constants';\n\nconst BrandProducts = () => {\n  const _useContext = useContext(ConsoleContext),\n        languageContext = _useContext.languageContext,\n        marketContext = _useContext.marketContext,\n        brandContext = _useContext.brandContext;\n\n  const _useFetch = useFetch({\n    url: `${CONSTANTS.URL_PREFIX}://prody.me/api/product_page_brand_products/${marketContext}/${brandContext}`,\n    header: authHeader(),\n    method: 'GET',\n    dep1: brandContext,\n    dep2: marketContext\n  }),\n        data = _useFetch.data,\n        loading = _useFetch.loading;\n\n  const rowClickHandle = barcode => {\n    window.open(`/productpage/ISR/${barcode}`, \"_blank\");\n  };\n\n  const title = () => {\n    if (languageContext === 'ENG') {\n      return 'Brand Products';\n    } else if (languageContext === 'HEB') {\n      return 'מוצרי המותג';\n    }\n  };\n\n  const rows = () => {\n    if (!loading) {\n      const sortedData = _.sortBy(data, [item => {\n        return -item.barcode;\n      }]);\n\n      return sortedData.map((row, index) => {\n        if (languageContext === 'ENG') {\n          return React.createElement(\"tr\", {\n            className: \"Table_row_clickable\",\n            key: index,\n            onClick: () => {\n              rowClickHandle(row.barcode);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 37\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 38\n            },\n            __self: this\n          }, row.barcode), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 39\n            },\n            __self: this\n          }, row.desc_eng), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 40\n            },\n            __self: this\n          }, row.quantity + ' ' + row.uom_eng, \" \"));\n        } else if (languageContext === 'HEB') {\n          return React.createElement(\"tr\", {\n            className: \"Table_row_clickable\",\n            key: index,\n            onClick: () => {\n              rowClickHandle(row.barcode);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 46\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 47\n            },\n            __self: this\n          }, row.barcode), React.createElement(\"td\", {\n            dir: \"rtl\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 48\n            },\n            __self: this\n          }, row.desc_heb), React.createElement(\"td\", {\n            dir: \"rtl\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 49\n            },\n            __self: this\n          }, row.quantity + ' ' + row.uom_heb, \" \"));\n        }\n      });\n    }\n  };\n\n  const tableHead = () => {\n    if (languageContext === 'ENG') {\n      return React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"Barcode\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Label\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Quantity\")));\n    } else if (languageContext === 'HEB') {\n      return React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"\\u05D1\\u05E8\\u05E7\\u05D5\\u05D3\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"\\u05E9\\u05DD\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"\\u05DB\\u05DE\\u05D5\\u05EA\")));\n    }\n  };\n\n  const content = () => {\n    if (loading) {\n      return React.createElement(Loader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      });\n    } else if (!data.length) {\n      return React.createElement(NoData, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(React.Fragment, null, React.createElement(Table, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, tableHead(), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, rows()))));\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"brandProductsContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      'fontWeight': 'bold'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, title()), content());\n};\n\nexport default BrandProducts;","map":{"version":3,"sources":["/Users/michellezyman/Projects/prody/prody-master/prody_fe/src/Console/ProductPage/BrandProducts.js"],"names":["React","useContext","ConsoleContext","useFetch","NoData","Table","Loader","authHeader","_","CONSTANTS","BrandProducts","languageContext","marketContext","brandContext","url","URL_PREFIX","header","method","dep1","dep2","data","loading","rowClickHandle","barcode","window","open","title","rows","sortedData","sortBy","item","map","row","index","desc_eng","quantity","uom_eng","desc_heb","uom_heb","tableHead","content","length"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\n\n// import './BrandProducts.css';\nimport {ConsoleContext} from \"../ConsoleContext\";\nimport { useFetch } from \"../../utils/Hook\";\nimport NoData from \"../../componenets/NoData\";\nimport Table from \"../../componenets/Table\";\nimport Loader from \"../../componenets/Loader\";\nimport authHeader from \"../../utils/auth-header\";\nimport _ from \"lodash\";\nimport {CONSTANTS} from '../../utils/constants';\n\nconst BrandProducts = () => {\n\n    const { languageContext, marketContext, brandContext } = useContext(ConsoleContext);\n    const { data, loading} = useFetch({url:`${CONSTANTS.URL_PREFIX}://prody.me/api/product_page_brand_products/${marketContext}/${brandContext}`,\n        header: authHeader(),\n        method: 'GET',\n        dep1: brandContext,\n        dep2: marketContext});\n\n    const rowClickHandle = (barcode) => {\n        window.open(`/productpage/ISR/${barcode}`, \"_blank\")\n    };\n\n    const title = () => {\n        if (languageContext === 'ENG') {return 'Brand Products'}\n        else if (languageContext === 'HEB') {return 'מוצרי המותג'}\n    };\n\n    const rows = () => {\n        if(!loading) {\n            const sortedData = _.sortBy(data, [(item) => {return -item.barcode}]);\n            return sortedData.map((row, index) => {\n                if (languageContext === 'ENG') {\n                return (\n                    <tr className=\"Table_row_clickable\" key={index} onClick={()=>{rowClickHandle(row.barcode)}}>\n                        <td>{row.barcode}</td>\n                        <td>{row.desc_eng}</td>\n                        <td>{row.quantity + ' ' + row.uom_eng} </td>\n                    </tr>\n\n                )}\n                else if (languageContext === 'HEB') {\n                return (\n                    <tr className=\"Table_row_clickable\" key={index} onClick={()=>{rowClickHandle(row.barcode)}}>\n                        <td>{row.barcode}</td>\n                        <td dir='rtl'>{row.desc_heb}</td>\n                        <td dir='rtl'>{row.quantity + ' ' + row.uom_heb} </td>\n                    </tr>\n\n                )}\n            })\n        }\n    };\n\n    const tableHead = () => {\n        if (languageContext === 'ENG') {return (\n            <thead>\n            <tr>\n                <th>Barcode</th>\n                <th>Label</th>\n                <th>Quantity</th>\n            </tr>\n            </thead>\n        )}\n        else if (languageContext === 'HEB') {return (\n            <thead>\n            <tr>\n                <th>ברקוד</th>\n                <th>שם</th>\n                <th>כמות</th>\n            </tr>\n            </thead>\n        )}\n    };\n\n    const content = () => {\n        if(loading) {return (<Loader/>)}\n        else if (!data.length) {return (<NoData/>)}\n        else {\n            return (\n                <>\n                    <Table>\n                        <table>\n                            {tableHead()}\n                            <tbody>\n                            {rows()}\n                            </tbody>\n                        </table>\n                    </Table>\n                </>\n            )\n        }\n    };\n\n    return (\n        <div className='brandProductsContainer'>\n            <div style={{'fontWeight': 'bold'}}>{title()}</div>\n            {content()}\n        </div>\n    )\n};\n\nexport default BrandProducts;"]},"metadata":{},"sourceType":"module"}