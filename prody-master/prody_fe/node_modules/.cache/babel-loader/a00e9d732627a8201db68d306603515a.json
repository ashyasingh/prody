{"ast":null,"code":"var _jsxFileName = \"/Users/ashyasingh/prodynew/prody/prody-master/prody_fe/src/Console/ProductPage/BetterProducts.js\";\nimport React, { useContext } from 'react';\nimport './BetterProducts.css';\nimport { ConsoleContext } from \"../ConsoleContext\";\nimport { useFetch } from '../../utils/Hook';\nimport _ from \"lodash\";\nimport Table from \"../../componenets/Table\";\nimport NoData from \"../../componenets/NoData\";\nimport Loader from '../../componenets/Loader';\nimport authHeader from \"../../utils/auth-header\";\nimport { CONSTANTS } from '../../utils/constants';\n\nconst BetterProducts = () => {\n  const _useContext = useContext(ConsoleContext),\n        marketContext = _useContext.marketContext,\n        productContext = _useContext.productContext,\n        languageContext = _useContext.languageContext;\n\n  const _useFetch = useFetch({\n    url: `${CONSTANTS.URL_PREFIX}://prody.me/api/product_page_score_and_better_products/${marketContext}/${productContext}`,\n    header: authHeader(),\n    method: 'GET',\n    dep1: productContext\n  }),\n        data = _useFetch.data,\n        loading = _useFetch.loading;\n\n  const rowClickHandle = barcode => {\n    window.open(`/productpage/ISR/${barcode}`, \"_blank\");\n  };\n\n  const title = () => {\n    if (languageContext === 'ENG') {\n      return React.createElement(\"div\", {\n        style: {\n          'fontWeight': 'bold'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, \"Healthier Products\");\n    } else if (languageContext === 'HEB') {\n      return React.createElement(\"div\", {\n        style: {\n          'fontWeight': 'bold'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, \"\\u05DE\\u05D5\\u05E6\\u05E8\\u05D9\\u05DD \\u05D1\\u05E8\\u05D9\\u05D0\\u05D9\\u05DD \\u05D9\\u05D5\\u05EA\\u05E8\");\n    }\n  };\n\n  const rows = () => {\n    if (!loading && languageContext === 'ENG') {\n      const sortedData = _.sortBy(data, [item => {\n        return -parseInt(item.better_score, 10);\n      }, item => {\n        return item.better_brand_eng;\n      }]);\n\n      return sortedData.map((row, index) => {\n        return React.createElement(\"tr\", {\n          className: \"Table_row_clickable\",\n          key: index,\n          onClick: () => rowClickHandle(row.better_barcode),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }, row.better_desc_eng), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, row.better_quantity + ' ' + row.better_uom_eng, \" \"), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, row.better_brand_eng), React.createElement(\"td\", {\n          className: \"numeric_value\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, row.better_score));\n      });\n    } else if (!loading && languageContext === 'HEB') {\n      const sortedData = _.sortBy(data, [item => {\n        return -parseInt(item.better_score, 10);\n      }, item => {\n        return item.better_brand_heb;\n      }]);\n\n      return sortedData.map((row, index) => {\n        return React.createElement(\"tr\", {\n          className: \"Table_row_clickable\",\n          key: index,\n          onClick: () => rowClickHandle(row.better_barcode),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          dir: \"rtl\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, row.better_desc_heb), React.createElement(\"td\", {\n          dir: \"rtl\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, row.better_quantity + ' ' + row.better_uom_heb, \" \"), React.createElement(\"td\", {\n          dir: \"rtl\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, row.better_brand_heb), React.createElement(\"td\", {\n          className: \"numeric_value\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, row.better_score));\n      });\n    }\n  };\n\n  const tableHead = () => {\n    if (languageContext === 'ENG') {\n      return React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"Label\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Quantity\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Brand\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Score\")));\n    } else if (languageContext === 'HEB') {\n      return React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"\\u05E9\\u05DD\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"\\u05DB\\u05DE\\u05D5\\u05EA\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"\\u05DE\\u05D5\\u05EA\\u05D2\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"\\u05E6\\u05D9\\u05D5\\u05DF\")));\n    }\n  };\n\n  const content = () => {\n    if (loading) {\n      return React.createElement(Loader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      });\n    } else if (!data.length) {\n      return React.createElement(NoData, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(React.Fragment, null, React.createElement(Table, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, tableHead(), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, rows()))));\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"betterProductsContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, title(), React.createElement(\"div\", {\n    className: \"betterProductsContent\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, content()));\n};\n\nexport default BetterProducts;","map":{"version":3,"sources":["/Users/ashyasingh/prodynew/prody/prody-master/prody_fe/src/Console/ProductPage/BetterProducts.js"],"names":["React","useContext","ConsoleContext","useFetch","_","Table","NoData","Loader","authHeader","CONSTANTS","BetterProducts","marketContext","productContext","languageContext","url","URL_PREFIX","header","method","dep1","data","loading","rowClickHandle","barcode","window","open","title","rows","sortedData","sortBy","item","parseInt","better_score","better_brand_eng","map","row","index","better_barcode","better_desc_eng","better_quantity","better_uom_eng","better_brand_heb","better_desc_heb","better_uom_heb","tableHead","content","length"],"mappings":"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","sourcesContent":["import React, {useContext} from 'react';\n\nimport './BetterProducts.css';\nimport {ConsoleContext} from \"../ConsoleContext\";\nimport { useFetch } from '../../utils/Hook';\nimport _ from \"lodash\";\nimport Table from \"../../componenets/Table\";\nimport NoData from \"../../componenets/NoData\";\nimport Loader from '../../componenets/Loader';\nimport authHeader from \"../../utils/auth-header\";\nimport {CONSTANTS} from '../../utils/constants';\n\nconst BetterProducts = () => {\n\n    const { marketContext, productContext, languageContext } = useContext(ConsoleContext);\n    const { data, loading} = useFetch({url:`${CONSTANTS.URL_PREFIX}://prody.me/api/product_page_score_and_better_products/${marketContext}/${productContext}`,\n        header: authHeader(),\n        method: 'GET',\n        dep1: productContext});\n\n    const rowClickHandle = (barcode) => {\n        window.open(`/productpage/ISR/${barcode}`, \"_blank\")\n    };\n\n    const title = () => {\n      if (languageContext === 'ENG') {return <div style={{'fontWeight': 'bold'}}>Healthier Products</div>}\n      else if (languageContext === 'HEB') {return <div style={{'fontWeight': 'bold'}}>מוצרים בריאים יותר</div>}\n    };\n\n    const rows = () => {\n        if(!loading && languageContext === 'ENG') {\n            const sortedData = _.sortBy(data, [\n                (item) => {return -parseInt(item.better_score, 10)},\n                (item) => {return item.better_brand_eng}]);\n            return sortedData.map((row, index) => {\n                    return (\n                        <tr className=\"Table_row_clickable\" key={index} onClick={()=>rowClickHandle(row.better_barcode)}>\n                            <td>{row.better_desc_eng}</td>\n                            <td>{row.better_quantity + ' ' + row.better_uom_eng} </td>\n                            <td>{row.better_brand_eng}</td>\n                            <td className=\"numeric_value\">{row.better_score}</td>\n                        </tr>\n\n                    )})\n        }\n            else if(!loading && languageContext === 'HEB') {\n                const sortedData = _.sortBy(data, [\n                    (item) => {return -parseInt(item.better_score, 10)},\n                    (item) => {return item.better_brand_heb}]);\n                return sortedData.map((row, index) => {\n                    return (\n                        <tr className=\"Table_row_clickable\" key={index} onClick={()=>rowClickHandle(row.better_barcode)}>\n                            <td dir='rtl'>{row.better_desc_heb}</td>\n                            <td dir='rtl'>{row.better_quantity + ' ' + row.better_uom_heb} </td>\n                            <td dir='rtl'>{row.better_brand_heb}</td>\n                            <td className=\"numeric_value\">{row.better_score}</td>\n                        </tr>\n\n                    )})\n            }\n    };\n\n    const tableHead = () => {\n        if (languageContext === 'ENG') {\n            return (\n                <thead>\n                <tr>\n                    <th>Label</th>\n                    <th>Quantity</th>\n                    <th>Brand</th>\n                    <th>Score</th>\n                </tr>\n                </thead>\n            )\n        } else if (languageContext === 'HEB') {\n            return (\n                <thead>\n                <tr>\n                    <th>שם</th>\n                    <th>כמות</th>\n                    <th>מותג</th>\n                    <th>ציון</th>\n                </tr>\n                </thead>\n            )\n        }\n    };\n\n    const content = () => {\n        if(loading) {return (<Loader/>)}\n        else if (!data.length) {return (<NoData/>)}\n        else {\n            return (\n                <>\n                <Table>\n                    <table>\n                        {tableHead()}\n                        <tbody>\n                        {rows()}\n                        </tbody>\n                    </table>\n                </Table>\n                    </>\n            )\n        }\n    };\n\n    return (\n        <div className='betterProductsContainer'>\n            {title()}\n            <div className='betterProductsContent'>{content()}</div>\n        </div>\n    )\n};\n\nexport default BetterProducts;"]},"metadata":{},"sourceType":"module"}